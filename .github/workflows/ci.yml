name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: autonumbergame:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Save Docker image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: /tmp/.buildx-cache
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "‚úÖ Build completed successfully!"
        echo "üì¶ Docker image built and saved as artifact"
        echo "üñ•Ô∏è  Windows Server 2022 can now pull the image from GitHub"
        echo ""
        echo "Next steps:"
        echo "1. Download the docker-image artifact from GitHub"
        echo "2. Load it on Windows Server 2022: docker load < image.tar"
        echo "3. Run with docker-compose up -d"
