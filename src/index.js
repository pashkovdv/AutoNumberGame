console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥—É–ª–µ–π...');

import dotenv from 'dotenv';
console.log('‚úÖ dotenv –∑–∞–≥—Ä—É–∂–µ–Ω');

import { TelegramGameBot } from './bot/telegramBot.js';
console.log('‚úÖ TelegramGameBot –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π...');

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

console.log('üìÅ __filename:', __filename);
console.log('üìÅ __dirname:', __dirname);

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
const envPath = join(__dirname, '..', '.env');
console.log('üìÅ –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É:', envPath);

try {
  dotenv.config({ path: envPath });
  console.log('‚úÖ .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env:', error);
}

async function main() {
  console.log('üöÄ –§—É–Ω–∫—Ü–∏—è main() –∑–∞–ø—É—â–µ–Ω–∞');
  
  try {
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    const token = process.env.TELEGRAM_BOT_TOKEN;
    if (!token) {
      throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }

    console.log('üöÄ –ó–∞–ø—É—Å–∫ AutoNumberGame Telegram Bot...');
    console.log('üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞:', token.substring(0, 10) + '...');
    
    // –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    const bot = new TelegramGameBot(token);
    console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞...');
    
    await bot.initialize();
    
    console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã');
    console.log('üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π –Ω–æ–º–µ—Ä –æ—Ç 001 –¥–æ 999 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGINT', async () => {
      console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
      await bot.stop();
      process.exit(0);
    });

    process.on('SIGTERM', async () => {
      console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
      await bot.stop();
      process.exit(0);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
    process.on('uncaughtException', (error) => {
      console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });

    process.on('unhandledRejection', (reason) => {
      console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
      process.exit(1);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –∑–∞–ø—É—Å–∫–∞...');
console.log('üîç import.meta.url:', import.meta.url);
console.log('üîç process.argv[1]:', process.argv[1]);

// –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
const normalizedMetaUrl = fileURLToPath(import.meta.url).replace(/\\/g, '/');
const normalizedArgv = process.argv[1].replace(/\\/g, '/');
console.log('üîç –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π import.meta.url:', normalizedMetaUrl);
console.log('üîç –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π process.argv[1]:', normalizedArgv);
console.log('üîç –£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è:', normalizedMetaUrl === normalizedArgv);

if (normalizedMetaUrl === normalizedArgv) {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º main()...');
  main().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main():', error);
    process.exit(1);
  });
} else {
  console.log('‚ö†Ô∏è –£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å, main() –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è');
}
